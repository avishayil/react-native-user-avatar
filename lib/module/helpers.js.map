{"version":3,"sources":["helpers.js"],"names":["abbr","name","startsWith","console","warn","sumChars","str","sum","i","length","charCodeAt","fetchImage","src","options","fetch","fetchCall","contentTypeHeader","Platform","OS","headers","get","map","generateBackgroundStyle","bgColor","bgColors","background","backgroundColor","getContainerStyle","size","borderRadius","borderWidth","borderColor","justifyContent","alignItems"],"mappings":"6UAAA,yCACA,0DAEO,GAAMA,CAAAA,IAAI,CAAG,cAACC,IAAD,CAAU,CAC5B,GAAID,CAAAA,IAAI,CAAG,sBAASC,IAAT,CAAX,CACA,GAAIA,IAAI,CAACC,UAAL,CAAgB,GAAhB,CAAJ,CAA0B,CACxBF,IAAI,KAAQA,IAAZ,CACD,CACD,GAAI,CAACA,IAAL,CAAW,CACTG,OAAO,CAACC,IAAR,CAAa,8BAAb,EACAJ,IAAI,CAAGC,IAAP,CACD,CACD,MAAOD,CAAAA,IAAP,CACD,CAVM,C,kBAYA,GAAMK,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,CAAS,CAC/B,GAAIC,CAAAA,GAAG,CAAG,CAAV,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,GAAG,CAACG,MAAxB,CAAgCD,CAAC,EAAjC,CAAqC,CACnCD,GAAG,EAAID,GAAG,CAACI,UAAJ,CAAeF,CAAf,CAAP,CACD,CAED,MAAOD,CAAAA,GAAP,CACD,CAPM,C,0BASA,GAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAOC,GAAP,CAAYC,OAAZ,yNAEEC,KAAK,CAACF,GAAD,CAAMC,OAAN,CAFP,SAEhBE,SAFgB,eAGhBC,iBAHgB,CAGIC,sBAASC,EAAT,GAAgB,KAAhB,CACxBH,SAAS,CAACI,OAAV,CAAkBC,GAAlB,CAAsB,cAAtB,CADwB,CAExBL,SAAS,CAACI,OAAV,CAAkBE,GAAlB,CAAsB,cAAtB,CALoB,KAMlBL,iBAAiB,CAACd,UAAlB,CAA6B,QAA7B,CANkB,yDAOb,IAPa,SASpBC,OAAO,CAACC,IAAR,CAAa,gDAAb,EAToB,gCAUb,KAVa,2FAatBD,OAAO,CAACC,IAAR,CAAa,iDAAb,cAbsB,gCAcf,KAde,4EAAnB,C,8BAkBA,GAAMkB,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACrB,IAAD,CAAOsB,OAAP,CAAgBC,QAAhB,CAA6B,CAClE,GAAIC,CAAAA,UAAJ,CACA,GAAIF,OAAJ,CAAa,CACXE,UAAU,CAAGF,OAAb,CACD,CAFD,IAEO,CAEL,GAAMf,CAAAA,CAAC,CAAGH,QAAQ,CAACJ,IAAD,CAAR,CAAiBuB,QAAQ,CAACf,MAApC,CACAgB,UAAU,CAAGD,QAAQ,CAAChB,CAAD,CAArB,CACD,CACD,MAAO,CAACkB,eAAe,CAAED,UAAlB,CAAP,CACD,CAVM,C,wDAYA,GAAME,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,IAAD,CAAOhB,GAAP,CAAYiB,YAAZ,CAA6B,CAC5D,MAAO,CACLA,YAAY,CAAEA,YAAY,CAAGA,YAAH,CAAmBD,IAAI,CAAG,GAD/C,CAELE,WAAW,CAAElB,GAAG,CAAG,CAAH,CAAO,CAFlB,CAGLmB,WAAW,CAAE,aAHR,CAILC,cAAc,CAAE,QAJX,CAKLC,UAAU,CAAE,QALP,CAAP,CAOD,CARM,C","sourcesContent":["import {Platform} from 'react-native';\r\nimport initials from 'initials';\r\n\r\nexport const abbr = (name) => {\r\n  let abbr = initials(name);\r\n  if (name.startsWith('+')) {\r\n    abbr = `+${ abbr }`;\r\n  }\r\n  if (!abbr) {\r\n    console.warn('Could not get abbr from name');\r\n    abbr = name;\r\n  }\r\n  return abbr;\r\n};\r\n\r\nexport const sumChars = (str) => {\r\n  let sum = 0;\r\n  for (let i = 0; i < str.length; i++) {\r\n    sum += str.charCodeAt(i);\r\n  }\r\n\r\n  return sum;\r\n};\r\n\r\nexport const fetchImage = async (src, options) => {\r\n  try {\r\n    const fetchCall = await fetch(src, options);\r\n    const contentTypeHeader = Platform.OS === 'web' ?\r\n      fetchCall.headers.get('content-type') :\r\n      fetchCall.headers.map['content-type'];\r\n    if (contentTypeHeader.startsWith('image/')) {\r\n      return true;\r\n    } else {\r\n      console.warn('Online fetched source is not a supported image');\r\n      return false;\r\n    }\r\n  } catch (err) {\r\n    console.warn('Error fetching source, falling back to initials', err);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const generateBackgroundStyle = (name, bgColor, bgColors) => {\r\n  let background;\r\n  if (bgColor) {\r\n    background = bgColor;\r\n  } else {\r\n    // Pick a deterministic color from the list\r\n    const i = sumChars(name) % bgColors.length;\r\n    background = bgColors[i];\r\n  }\r\n  return {backgroundColor: background};\r\n};\r\n\r\nexport const getContainerStyle = (size, src, borderRadius) => {\r\n  return {\r\n    borderRadius: borderRadius ? borderRadius : (size * 0.5),\r\n    borderWidth: src ? 0 : 1,\r\n    borderColor: 'transparent',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  };\r\n};\r\n"]}